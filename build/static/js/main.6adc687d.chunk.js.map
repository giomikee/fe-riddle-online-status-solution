{"version":3,"sources":["App.js","OnlineStatusMock.js","index.js"],"names":["WrappedComponent","onIsOnlineChange","className","onClick","App","props","state","isOnlineBuffer","NotificationManager","info","this","isOnline","prevProps","self","statusChangeBuffer","clearTimeout","setTimeout","notifyStatus","setState","React","Component","withOnlineStatus","OnlineStatusMock","ReactDOM","render","document","getElementById"],"mappings":"0OAeyBA,E,2ECXV,G,MAAA,gBAAGC,EAAH,EAAGA,iBAAH,OACb,6BACE,4BAAQC,UAAU,aAAaC,QAAS,kBAAMF,GAAiB,KAA/D,UAGA,4BAAQC,UAAU,aAAaC,QAAS,kBAAMF,GAAiB,KAA/D,cD6BEG,G,wDAGL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZC,gBAAgB,GAJC,E,gDAQnB,WACCC,sBAAoBC,KAAKC,KAAKL,MAAMM,SAAW,SAAW,a,gCAG3D,SAAmBC,GAClB,IAAMC,EAAOH,KAEbA,KAAKI,oBAAsBC,aAAaL,KAAKI,oBAE7CJ,KAAKI,mBAAqBE,YAAW,WAEnCJ,EAAUD,UACVE,EAAKR,MAAMM,WAAaC,EAAUD,UAElCE,EAAKI,eAGNJ,EAAKK,SAAS,CAAEX,eAAgBM,EAAKR,MAAMM,aACzC,KAGFD,KAAKL,MAAMM,UACXD,KAAKL,MAAMM,WAAaC,EAAUD,UAClCD,KAAKL,MAAMM,WAAaD,KAAKJ,MAAMC,gBAEnCG,KAAKO,iB,oBAIP,WACC,IAAQN,EAAaD,KAAKL,MAAlBM,SAER,OACC,oCACC,yBAAKT,UAAWS,EAAW,SAAW,WACpCA,EAAW,SAAW,UACvB,kBAAC,wBAAD,Y,GA/CaQ,IAAMC,YAsDTC,GA7EUrB,EA6EOI,EA7ES,kDAEvC,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEK,UAAU,GAFP,EAFoB,0CAMvC,WAAU,IAAD,OACR,OACC,oCACC,kBAACW,EAAD,CACCrB,iBAAkB,SAAAU,GAAQ,OACzB,EAAKO,SAAS,CAAEP,gBAGlB,kBAACX,EAAD,iBACKU,KAAKL,MADV,CAECM,SAAUD,KAAKJ,MAAMK,iBAhBc,GACTQ,IAAMC,YEXtCG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6adc687d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tNotificationContainer,\n\tNotificationManager\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport OnlineStatusMock from './OnlineStatusMock';\nimport './App.css';\n\n/*\nFeel free to edit this all. If you don't need the HoC, go remove it.\nIf you wish to save the state somewhere else, go for it.\nJust keep rendering <OnlineStatusMock />\n*/\n\nconst withOnlineStatus = WrappedComponent =>\n\tclass WithOnlineStatus extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = { isOnline: false };\n\t\t}\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<OnlineStatusMock\n\t\t\t\t\t\tonIsOnlineChange={isOnline =>\n\t\t\t\t\t\t\tthis.setState({ isOnline })\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<WrappedComponent\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\tisOnline={this.state.isOnline}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t};\n\nclass App extends React.Component {\n\tstatusChangeBuffer;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOnlineBuffer: false\n\t\t};\n\t}\n\n\tnotifyStatus() {\n\t\tNotificationManager.info(this.props.isOnline ? 'Online' : 'Offline');\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst self = this;\n\n\t\tthis.statusChangeBuffer && clearTimeout(this.statusChangeBuffer);\n\n\t\tthis.statusChangeBuffer = setTimeout(() => {\n\t\t\tif (\n\t\t\t\tprevProps.isOnline &&\n\t\t\t\tself.props.isOnline !== prevProps.isOnline\n\t\t\t) {\n\t\t\t\tself.notifyStatus();\n\t\t\t}\n\n\t\t\tself.setState({ isOnlineBuffer: self.props.isOnline });\n\t\t}, 2000);\n\n\t\tif (\n\t\t\tthis.props.isOnline &&\n\t\t\tthis.props.isOnline !== prevProps.isOnline &&\n\t\t\tthis.props.isOnline !== this.state.isOnlineBuffer\n\t\t) {\n\t\t\tthis.notifyStatus();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { isOnline } = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className={isOnline ? 'online' : 'offline'}>\n\t\t\t\t\t{isOnline ? 'Online' : 'Offline'}\n\t\t\t\t\t<NotificationContainer />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default withOnlineStatus(App);\n","import React from 'react';\n\n/* don't edit this */\n\nexport default ({ onIsOnlineChange }) => (\n  <div>\n    <button className=\"controlBtn\" onClick={() => onIsOnlineChange(true)}>\n      Online\n    </button>\n    <button className=\"controlBtn\" onClick={() => onIsOnlineChange(false)}>\n      Offline\n    </button>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}